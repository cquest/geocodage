#!/bin/bash

. $(dirname $(readlink -f $0))/init.rc

cat _index_header.tt >index.textree
cat jeux/_index_header.tt >jeux/index.textree


for testdir in $(find jeux/ -mindepth 1 -maxdepth 1 -type d | sort); do
    testcode=$(basename $testdir)

    (
        echo "    facette#$testcode"
        cat jeux/$testcode/definition.tt | sed 's/^/      /'
    ) | tee -a jeux/index.textree >>index.textree

    echo "Writing: jeux/$testcode/index.textree" >&2
    (
        echo "// Generated by $0 at $(date +%Y-%m-%d) for test $testcode"
        cat jeux/_header.tt
        echo "  facette#$testcode"
        cat jeux/$testcode/definition.tt | sed 's/^/    /'
        # cat jeux/_header.tt
        cat <<EOF
  div.grey
   section
    h2 Synthèse des résultats

    // (OU TABLEAU)
    // résultat exact : point ou surface ?
    // distance : moyenne, médiane, min, max
    // succes (distance < 50 m ?) : combien ou ramené à 1
    // autres comptages...

    table.border
      thead
        tr
          th Service
          th Réussite
          th(colspan=5) Distance à la mesure terrain (m)
        tr
          th &nbsp;
          th &nbsp;
          th.right Moyenne
          th.right Écart-type
          th.right Min
          th.right Médiane
          th.right Max
      tbody
EOF
        _psql "SELECT api, round(avg(r.distance)), round(stddev(r.distance)), round(min(r.distance)), round(median(r.distance::numeric)), round(max(r.distance)) FROM test_result r INNER JOIN test_adresse t ON r.id=t.id WHERE facette_id='$testcode' GROUP BY api ORDER BY api" \
            | while read result; do
            old_ifs="$IFS"
            IFS="|"
            row=($result)
            # echo 0-1 = "${row[0]}" "${row[1]}"
            IFS="$old_ifs"

            cat <<EOF
        tr
          td ${row[0]}
          td -
          td ${row[1]}
          td ${row[2]}
          td ${row[3]}
          td ${row[4]}
          td ${row[5]}
EOF
        done
        cat <<EOF
  section
    h2 Adresses testées

    table.border
      thead
        tr
          th id
          th.street-number numero
          th voie
          th code_postal
          th commune
          th(colspan=3) Distance (m)
        tr
          th &nbsp;
          th &nbsp;
          th &nbsp;
          th &nbsp;
          th &nbsp;
          th IGN
          th Addok
          th Google
      tbody
EOF

        # _psql "SELECT id, numero, voie, code_postal, commune FROM test_adresse WHERE facette_id='$testcode'" \
        _psql "
select r1.id, numero, voie, code_postal, commune,
round(r1.distance) AS "IGN", round(r2.distance) AS "BAN", round(r3.distance) AS "google"
from test_adresse t
  left join test_result r1 on t.id=r1.id
  left join test_result r2 on r1.id=r2.id
  left join test_result r3 on r2.id=r3.id
where t.facette_id='$testcode'
  and r1.api='IGN'
  and r2.api='BAN'
  and r3.api='google'
" \
            | while read result; do
            old_ifs="$IFS"
            IFS="|"
            row=($result)
            # echo 0-1 = "${row[0]}" "${row[1]}"
            IFS="$old_ifs"

            cat <<EOF #>$testcode/addresses.textrees
        tr
          td ${row[0]}
          td.right ${row[1]}
          td ${row[2]}
          td ${row[3]}
          td ${row[4]}
          td.right ${row[5]}
          td.right ${row[6]}
          td.right ${row[7]}
EOF

        done
        cat <<EOF

  foot-png
:end
EOF
    ) >jeux/$testcode/index.textree
    # echo "Writing: $testcode/index.textree" >&2

done

cat <<EOF | tee -a jeux/index.textree >>index.textree
  foot-png
:end
EOF
